<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Intent的运用</title>
      <link href="2020/10/20/intent-de-yun-yong/"/>
      <url>2020/10/20/intent-de-yun-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Intent相关"><a href="#Intent相关" class="headerlink" title="Intent相关"></a>Intent相关</h1><h2 id="Intent的基础用法"><a href="#Intent的基础用法" class="headerlink" title="Intent的基础用法"></a>Intent的基础用法</h2><p>​    Intent是Activity之间的跳转。可以用putExtra()方法传递数据，其中如果想要传递对象应该将对象的类继承Serializable接口使其序列化。</p><p><strong>例如</strong>：<code>public class UserInfo implements Serializable{···}</code></p><p> 此处UserInfo实例化出的对象就可以当作参数传递。</p><h2 id="Intent进阶用法"><a href="#Intent进阶用法" class="headerlink" title="Intent进阶用法"></a>Intent进阶用法</h2><p>​    传递数据到下一个Activity用的是startActivity()方法，参数是Intent实例。如果需要有数据的返回应该用startActivityForResult()方法，传入两个参数：第一个参数是Intent实例；第二个参数是访问码(requestCode)，访问码是自己设置的，默认为0。startActivityForResult()与重写onActivityResult()方法应配合使用。</p><p><code>onActivityResult()</code>方法是：</p><p><code>protected void onActivityResult(int requestCode,int resultCode,@Nullable Intent data)</code></p><p>方法除了访问码还有一个结果码，所以在第二个有返回值的Activity里应该再设置一个结果码(使用<code>setResult()</code>方法)：</p><pre class=" language-java"><code class="language-java">Intent intent<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">,</span><span class="token string">"我回来了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setResult</span><span class="token punctuation">(</span>RESULT_CODE<span class="token punctuation">,</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>如果此方法的结果码与访问码和设置的结果码与访问码相同，则代表数据返回正确。</p><h2 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h2><p>附上使用例子：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>Protected <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span><span class="token keyword">int</span> resultCode<span class="token punctuation">,</span><span class="token annotation punctuation">@Nullable</span> Intent data<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span>resultCode<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>requestCode <span class="token operator">==</span> REQUEST_CODE <span class="token operator">&amp;&amp;</span> resultCode <span class="token operator">==</span> MainActivity<span class="token punctuation">.</span>RESULT_CODE<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>            String back <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            sp_tv<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>back<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/13/hello-world/"/>
      <url>2020/10/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
